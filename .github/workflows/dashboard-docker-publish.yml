name: Discord Dashboard - Build & Push

on:
  push:
    branches: [ main ]
    paths: 
      - 'discord-dashboard/**'
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
    paths: 
      - 'discord-dashboard/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-dashboard

jobs:
  build-and-push-dashboard:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Dashboard Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Make package public after push
    - name: Make dashboard package public
      run: |
        curl -X PATCH \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/orgs/BotTrapper/packages/container/discord-bot-dashboard \
          -d '{"visibility":"public"}' || echo "Package visibility update failed (might already be public)"

    - name: Test Dashboard Docker image
      run: |
        docker run --rm --entrypoint="" ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main node --version

    - name: Generate deployment artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: |
        echo "DISCORD_DASHBOARD_IMAGE_TAG=${GITHUB_SHA}" > dashboard-deployment.env

    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: dashboard-deployment-env
        path: dashboard-deployment.env